{"version":3,"sources":["node_modules/regenerator-runtime/runtime.js","js/render/render.js","js/requests/requests.js","js/ajax.js"],"names":["renderData","data","cards","length","innerHTML","map","Poster","Title","Year","join","renderDetailsData","container","Actors","Plot","Genre","renderFavCard","BASE_URL","fetchMovies","search","type","page","fetch","response","json","receivedData","console","log","fetchMoviesById","movieId","document","getElementById","form","pagWrapper","querySelector","details","getDetails","detailLink","getElementsByClassName","i","addEventListener","event","preventDefault","detailsData","imdbID","push","window","scrollTo","top","behavior","favId","JSON","parse","localStorage","addFavourites","fav","includes","alert","setItem","stringify","getPagination","totalRes","prevPagination","remove","pagination","createElement","classList","id","appendChild","newPagination","UIkit","items","itemsOnPage","displayedPages","pages","childNodes","$","on","value","innerText","Search","click","Error","totalResults"],"mappings":";AAAA;AGAA,AHCA;AACA;AGDA,AHEA;AACA;AGFA,AHGA;ACLA,ADMA;ACLA,ADMA,ICNMA,UAAU,GAAG,SAAbA,UAAa,GAAsB;AAAA,ADOzC,MCPoBC,IAAqB,uEAAd,EAAc;AAAA,ADQzC,MCR+BC,KAAU;ADSzC;AGNA,AFFI,ACFJ,AFWA,IGPMgB,ADJAF,EDEEf,IEEI,AFFA,CAACE,CCFC,CCIC0B,EDJE,EDEb,EAAiB,EEEE,CAACC,cAAT,CAAwB,aAAxB,CAAf,KDJA,EAEA;ACGA,AFFM5B,ADSN,IGPM6B,AFFA7B,IEEI,CFFC,CAACE,CEECyB,QAAQ,AFFf,CEEgBC,EFFE7B,IAAI,CACnBI,GADe,CACX,GECA,CAAwB,YAAxB,AFD6B,CEC1C;AACA,AFF0C,ADS1C,IGPM2B,KDHSf,CDCCX,IEEA,EFF0B,CEEvBuB,OFFHvB,CEEW,CAACwB,IFFc,UEEvB,CAAwB,YAAxB,CAAnB;AACA,AFH0C,ADU1C,IGPMX,IAAI,EFHcZ,CEGXsB,IFH6B,IEGrB,CAACI,GFHE1B,KAAkB,KEG7B,CAAuB,+BAAvB,CAAb;AACA,AFJ0C,ADW1C,EEAE,ECPI2B,MFJyB1B,CEIlB,GAAGqB,AFJ0B,QEIlB,AFJOrB,CEINsB,GFJiB,WEI1B,CAAwB,SAAxB,CAAhB;AACA,AFJU,ADWV,IGPM5B,KAAK,GAAG2B,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd,EAEA,mFFJ0BxB,MAAM,KAAK,KAAX,GAAmB,6BAAnB,GAAmDA,MAFnE,0KAKsCC,KALtC,oEAMsCC,IANtC;AAWD,ADCT,KCdwB,EAcfC,IAde,CAcV,EAdU,CAAlB;AESN,AFMK,ADAL,SGNS0B,UAAT,CAAoBjB,MAApB,EAA4B;AAC1B,AFMC,ADAH,CClBA,EAoBE,GERMkB,UAAU,GAAGP,QAAQ,CAACQ,sBAAT,CAAgC,gBAAhC,CAAnB,KDVF,iBAA2BnB,MAA3B,EAAmCC,IAAnC;AAAA,AFiBA;AGR4B,ADT5B,AFkBA,6BGPWmB,CAFiB;AAGxBF,ADZJ,AFmBA,IGPIA,UAAU,CAACE,CAAD,CAAV,CAAcC,gBAAd,CAA+B,OAA/B;AAAA,ADZJ,AFoBA,yEGR4C,iBAAOC,KAAP;AAAA,AFO1C,ACnBF,AFqBA,ICFQ9B,iBAAiB,GAAG,SAApBA,iBAAoB,GAA0B;AEPV,AFOU,ACnBtD,AFsBA,MCH6BT,IAAyB,uEAAlB,EAAkB;AEPV,AFOU,ACnBtD,AFuBA,MCJwCU,SAAc;AEPV,ADZ5C,AFwBA;AGZ4C,AFQxC,ACpBqCS,AFyBzC,MCLQnB,IAAI,CAACE,CCpB4BiB,IAAzC,CDoBI,EAAiB,wDCpB2B,CAAhD;ACaMoB,AFQA7B,ACrBN,AF0BA,ICLMA,SAAS,CAACP,EERVoC,KAAK,CAACC,CFQN,GAAsBxC,IAAI,CACvBI,GADmB,CACf,CETP,gBFSyD;AERnDqC,AFQmD,ACtB/D,AF2BA,UCLgBpC,MERJoC,AFQmD,SAA/CpC,EEV4B,GAElB,CFQqC,CEVnB;AAAA,AFUmB,ACtB/D,AF4BA,UCNwBC,KAAuC,ICpBlCc,KDoBLd,ACpBU,KDoB6B,CEPzDmC,KDZK1B,MCSiC,EDVV,gBACTE,MADS,mBACMC,IADN,mBACmBC,IADnB,EAFlC;ACY4C,AFUmB,ADO/D,UCP+BZ,IAAgC,SAAhCA,IAAgC;AEVnB,AFUmB,ACtB/D,AF8BA,UCRqCI,MAA0B,OEPlC,EFOQA,MAA0B,uBEPlBM,MAAM,CAACoB,CAAD,CAAN,CAAUK,MAA1B,CAHe;AFUmB,ACpBnDrB,AF6BZ,UCT6CT,ECpBjCS,EDoBmD,MCtB/D,GDsB6CT,IAAkB;AEVnB,AFUmB,ACtB/D,AFgCA,UCVmDC,KAAY,SAAZA,KAAY;AEVnB,AFWlC,ACvBV,AFiCA,mBE5BiCQ,QAAQ,CAACC,IAAT,EALjC,2DDwBkCjB,MADxB,wMAIoDC,KAJpD,0EAK4CC,IAL5C,uEAM0CM,KAN1C,wEAO2CF,MAP3C,6EAQgDC,IARhD;AAUD,ADCT,KCb4B,EAanBJ,IAbmB,CAad,EAbc,CAAtB;AETsC,AFuBvC,ACnCL,AFmCA,4BGpBkBmC,IAH0B;AFwBzC,AC/BSpB,AF+BZ,CCjBE,EAmBA,SCjCUA,YALZ;ACgBM,ADhBN,AFqCA,6CE/BaA,ECUWkB,UDhBxB,CCgBM,EAA+BR,OAA/B;AACAW,AHqBN,gBGrBMA,MAAM,CAACC,QAAP,CAAgB;AACdC,ADlBR,AFuCA,kBGrBQA,GAAG,EAAE,IADS;AAEdC,ADnBR,AFwCA,kBGrBQA,QAAQ,EAAE;AAFI,AFsBpB,ACvCF,AFyCA,ICFQjC,aEtBF,AFsBe,GAAG,SAAhBA,aAAgB,GAA0B;AAAA,AC/B5CU,AFkCN,MCHyBxB,IAAyB,EC/B5CwB,OAAO,CAACC,GAAR,0DD+B0B,EAAkB;AE3BN,AF2BM,ADIlD,MCJoCf,SAAc;AE3BN,ADZ5C,AF4CA;AGhC4C,AF4BxC,ACxCJ,AF6CA,MCLQV,IAAI,CAACE,MAAT,EAAiB;AE5BuB,AF6BtCQ,ACzCN,AF8CA,ICLMA,SAAS,CAACP,SAAV,GAAsBH,IAAI,CACvBI,GADmB,CACf,iBAAkD;AE9BnB,AF8BmB,AC1C/D,AF+CA,UCLgBC,MAA+C,SAA/CA,MAA+C;AE9BnB,AF8BmB,AC1C/D,AFgDA,UCNwBC,KAAuC,SAAvCA,KAAuC;AE9BnB,AF8BmB,AC1C/D,AFiDA,OGrCI,GF8B2BC,IAAgC,SAAhCA,IAAgC;AAAA,AC1C/D,AFkDA,UCRqCI,MAA0B,SAA1BA,MAA0B;AE9B3D,AF8B2D,ADS/D,UCT6CC,IAAkB,SAAlBA,IAAkB;AE9B3D,AF8B2D,ADU/D,UCVmDC,KAAY,SAAZA,KAAY;AE9B3D,AF+BM,ADUV,oJCRoCR,MAF1B,8MAKsDC,KALtD,4EAM8CC,IAN9C,yEAO4CM,KAP5C,0EAQ6CF,MAR7C,+EASkDC,IATlD;AE/BN,AF4CK,ADFT,KCb4B,EAgBnBJ,EC5CMkB,ED4Ba,CAgBd,EAhBc,CAAtB;AEhCsB,AFiDvB,ADHL;ACIG,ADHH,CCjBE;AE5BA,AH8CF,OG9CO,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,UAAU,CAACjC,MAAhC,EAAwCmC,CAAC,EAAzC,EAA6C;AAAA,AH+C/C,UG/CWA,CAAoC;AAW5C,AHqCH,6EE9CA,kBAA+BV,OAA/B;ACUC,ADVD,AF+CA,EGnCA;ADZA,AFgDA;AEhDA,AFiDA;AGpCA,ADbA,AFkDA,IGrCMqB,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,C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kBAAD,CAAL;AACD,AHwEH;AACA;AGzFgC,AH0FhC;AG1FgC,AH2FhC;AG3FgC,AH4FhC;AG5FgC,AH6FhC;AG7FgC,AH8FhC;AG9FgC,AH+FhC;AG/FgC,AHgGhC,GGhGA;AHiGA;AGjGA,AHkGA;AGlGA,AHmGA;AGnGA,AHoGA;AGpGA,AHqGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ajax.8681c9e4.js","sourceRoot":"..","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","//main data render function\r\nconst renderData = (data = [], cards) => {\r\n    if (data.length) {\r\n      cards.innerHTML = data\r\n        .map(({ Poster, Title, Year }) => {\r\n          return `<div class=\"movie__cards-item\">\r\n          <div class=\"movie__img-wrapper\">\r\n              <img src=\"${Poster === \"N/A\" ? \"./assets/images/default.jpg\" : Poster}\" alt=\"poster\" class=\"movie__poster\">\r\n          </div>\r\n          <div class=\"movie__info-wrapper\">\r\n              <h3 class=\"movie__title\">Title: ${Title}</h3>\r\n              <p class=\"movie__info\">Release: ${Year}</p>\r\n              <button class=\"movie__add-btn\">Add to favorites <i class=\"fas fa-plus\"></i></button>\r\n              <a href=\"\" class=\"movie__details flex-row-centered\">See Details <i class=\"fas fa-eye movie__details-icon\"></i></a>\r\n          </div>\r\n      </div>`;\r\n        })\r\n        .join(\"\");\r\n    }\r\n  }\r\n\r\n  //detail data render function\r\n  const renderDetailsData = (data = [], container) => {\r\n    if (data.length) {\r\n      container.innerHTML = data\r\n        .map(({ Poster, Title, Year, Actors, Plot, Genre }) => {\r\n          return ` <div class=\"movie__details-img\">\r\n                      <img src=\"${Poster}\" alt=\"poster\" class=\"movie__poster\">\r\n                  </div>\r\n                  <div class=\"movie__details-info\">\r\n                    <h3 class=\"movie__details-title\">Title: ${Title}</h3>\r\n                    <p class=\"movie__info\">Release: ${Year}</p>\r\n                    <p class=\"movie__info\">Genre: ${Genre}</p>\r\n                    <p class=\"movie__info\">Actors: ${Actors}</p>\r\n                    <p class=\"movie__info\">Description: ${Plot}</p>\r\n                  </div> `;\r\n        })\r\n        .join(\"\");\r\n    }\r\n  }\r\n  \r\n  //favorite card render\r\n  const renderFavCard = (data = [], container) => {\r\n    if (data.length) {\r\n      container.innerHTML = data\r\n        .map(({ Poster, Title, Year, Actors, Plot, Genre }) => {\r\n          return ` <div class=\"favorites__card\">\r\n                    <div class=\"movie__details-img\">\r\n                        <img src=\"${Poster}\" alt=\"poster\" class=\"movie__poster\">\r\n                    </div>\r\n                    <div class=\"movie__details-info\">\r\n                      <h3 class=\"movie__details-title\">Title: ${Title}</h3>\r\n                      <p class=\"movie__info\">Release: ${Year}</p>\r\n                      <p class=\"movie__info\">Genre: ${Genre}</p>\r\n                      <p class=\"movie__info\">Actors: ${Actors}</p>\r\n                      <p class=\"movie__info\">Description: ${Plot}</p>\r\n                      <button class=\"favorites__rem-btn\">Remove from favorites <i class=\"fas fa-trash-alt\"></i></button>\r\n                    </div> \r\n                  </div>`;\r\n        })\r\n        .join(\"\");\r\n    }\r\n  }\r\n\r\n  export  {renderData, renderDetailsData, renderFavCard};","const BASE_URL = \"http://www.omdbapi.com/?apikey=1320d6a&\";\r\n\r\n//fetch movies by title\r\nasync function fetchMovies(search, type, page = 1) { \r\n    try {\r\n      const response = await fetch(\r\n        `${BASE_URL}&s=${search}&type=${type}&page=${page}`\r\n      );\r\n      const receivedData = await response.json();\r\n      return receivedData;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  //fetch movies by id\r\nasync function fetchMoviesById(movieId) { \r\n    try {\r\n      const response = await fetch(`${BASE_URL}&i=${movieId}`);\r\n      const receivedData = await response.json();\r\n      return receivedData;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  export {fetchMoviesById, fetchMovies};","import \"regenerator-runtime/runtime\";\r\nimport { renderData, renderDetailsData } from \"./render/render.js\";\r\nimport { fetchMoviesById, fetchMovies } from \"./requests/requests.js\";\r\n\r\nconst search = document.getElementById(\"searchInput\");\r\nconst form = document.getElementById(\"searchForm\");\r\nconst pagWrapper = document.getElementById(\"pagWrapper\");\r\nconst type = document.querySelector(\".movie__type-selector:checked\");\r\nconst details = document.getElementById(\"details\");\r\nconst cards = document.getElementById(\"cards\");\r\n\r\n//detail func\r\nfunction getDetails(search) {\r\n  const detailLink = document.getElementsByClassName(\"movie__details\");\r\n  for (let i = 0; i != detailLink.length; i++) {\r\n    detailLink[i].addEventListener(\"click\", async (event) => {\r\n      event.preventDefault();\r\n      const detailsData = [];\r\n      detailsData.push(await fetchMoviesById(search[i].imdbID));\r\n      renderDetailsData(detailsData, details);\r\n      window.scrollTo({\r\n        top: 5000,\r\n        behavior: \"smooth\"\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\n//add favourites\r\nconst favId = JSON.parse(localStorage.movieId || \"[]\");\r\n\r\nfunction addFavourites(search) {\r\n  const fav = document.getElementsByClassName(\"movie__add-btn\");\r\n\r\n  for (let i = 0; i != fav.length; i++) {\r\n    fav[i].addEventListener(\"click\", (event) => {\r\n      event.preventDefault();\r\n      if (favId.includes(search[i].imdbID)) {\r\n        alert(\"you already added this movie to your favourites\");\r\n      } else {\r\n        favId.push(search[i].imdbID);\r\n        localStorage.setItem(\"movieId\", JSON.stringify(favId));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n//pagination func\r\nfunction getPagination(totalRes) {\r\n  const prevPagination = document.querySelector(\".uk-pagination\"); //removing previous pagination\r\n  prevPagination.remove();\r\n\r\n  const pagination = document.createElement(\"ul\"); //creating new pagination as list\r\n  pagination.classList = \"movie__pagination uk-pagination\";\r\n  pagination.id = \"pagination\";\r\n  pagWrapper.appendChild(pagination);\r\n\r\n  const newPagination = document.querySelector(\".uk-pagination\"); //cathing new pagination\r\n\r\n  UIkit.pagination(newPagination, {\r\n    //uikit component pagination\r\n    items: totalRes,\r\n    itemsOnPage: 10,\r\n    displayedPages: 4,\r\n  });\r\n\r\n  const pages = pagination.childNodes; //select all li\r\n\r\n  $(\".uk-pagination\").on(\"click\", function () {\r\n    //adding listeners to all pages  with getting their innertext as value\r\n    for (let i = 0; i != pages.length; i++) {\r\n      pages[i].addEventListener(\"click\", async () => {\r\n        const { Search } = await fetchMovies(\r\n          search.value,\r\n          type.value,\r\n          pages[i].innerText\r\n        );\r\n        renderData(Search, cards);\r\n        getDetails(Search);\r\n      });\r\n    }\r\n  });\r\n  pages[0].click();\r\n}\r\n\r\nform.addEventListener(\"submit\", async (event) => {\r\n  //creating request on submit with data render\r\n  event.preventDefault();\r\n  const type = document.querySelector(\".movie__type-selector:checked\");\r\n  const { Search, Error, totalResults } = await fetchMovies(\r\n    search.value,\r\n    type.value\r\n  );\r\n  if (Search) {\r\n    renderData(Search, cards);\r\n    getDetails(Search);\r\n    addFavourites(Search);\r\n    getPagination(totalResults);\r\n  }\r\n  if (!Search && Error === \"Movie not found!\") {\r\n    alert(\"Movie not found!\");\r\n  }\r\n});\r\n"]}